[{"/Users/luigisiopongco/social-bubble-client/src/index.js":"1","/Users/luigisiopongco/social-bubble-client/src/App.js":"2","/Users/luigisiopongco/social-bubble-client/src/Bubbles/framework/reducer.js":"3","/Users/luigisiopongco/social-bubble-client/src/Login/framework/reducer.js":"4","/Users/luigisiopongco/social-bubble-client/src/Bubbles/framework/actions.js":"5","/Users/luigisiopongco/social-bubble-client/src/Login/framework/actions.js":"6","/Users/luigisiopongco/social-bubble-client/src/Login/ui/login.jsx":"7","/Users/luigisiopongco/social-bubble-client/src/Login/ui/register.jsx":"8","/Users/luigisiopongco/social-bubble-client/src/Bubbles/ui/Dashboard.jsx":"9","/Users/luigisiopongco/social-bubble-client/src/Bubbles/ui/Members.jsx":"10","/Users/luigisiopongco/social-bubble-client/src/Bubbles/ui/AddMember.jsx":"11","/Users/luigisiopongco/social-bubble-client/src/BubbleBuilder/ui/BubbleBuilder.jsx":"12","/Users/luigisiopongco/social-bubble-client/src/Bubbles/ui/Bubbles.jsx":"13","/Users/luigisiopongco/social-bubble-client/src/utils/Auth.js":"14","/Users/luigisiopongco/social-bubble-client/src/Bubbles/use-cases/getBubblePosts.js":"15","/Users/luigisiopongco/social-bubble-client/src/Bubbles/use-cases/addBubbleMember.js":"16","/Users/luigisiopongco/social-bubble-client/src/Bubbles/use-cases/getBubbleUsers.js":"17","/Users/luigisiopongco/social-bubble-client/src/Bubbles/use-cases/getUserBubbles.js":"18","/Users/luigisiopongco/social-bubble-client/src/Bubbles/use-cases/updateUserStatus.js":"19","/Users/luigisiopongco/social-bubble-client/src/Bubbles/use-cases/addNewBubble.js":"20","/Users/luigisiopongco/social-bubble-client/src/Navbar/Navbar.jsx":"21","/Users/luigisiopongco/social-bubble-client/src/Login/ui/landingPage.jsx":"22","/Users/luigisiopongco/social-bubble-client/src/Login/ui/nav.jsx":"23","/Users/luigisiopongco/social-bubble-client/src/Login/use-cases/getLoggedInUser.js":"24"},{"size":1289,"mtime":1607426533133,"results":"25","hashOfConfig":"26"},{"size":1535,"mtime":1607426571348,"results":"27","hashOfConfig":"26"},{"size":1478,"mtime":1607423111275,"results":"28","hashOfConfig":"26"},{"size":2327,"mtime":1607426268355,"results":"29","hashOfConfig":"26"},{"size":600,"mtime":1607410977489,"results":"30","hashOfConfig":"26"},{"size":692,"mtime":1607422584777,"results":"31","hashOfConfig":"26"},{"size":10246,"mtime":1607425883421,"results":"32","hashOfConfig":"26"},{"size":2947,"mtime":1607408179202,"results":"33","hashOfConfig":"26"},{"size":4916,"mtime":1607441227764,"results":"34","hashOfConfig":"26"},{"size":2185,"mtime":1607426472661,"results":"35","hashOfConfig":"26"},{"size":1168,"mtime":1607426479631,"results":"36","hashOfConfig":"26"},{"size":2530,"mtime":1607410977471,"results":"37","hashOfConfig":"26"},{"size":3346,"mtime":1607444931778,"results":"38","hashOfConfig":"26"},{"size":239,"mtime":1607407978413,"results":"39","hashOfConfig":"26"},{"size":516,"mtime":1607444979519,"results":"40","hashOfConfig":"26"},{"size":575,"mtime":1607412272967,"results":"41","hashOfConfig":"26"},{"size":513,"mtime":1607412360098,"results":"42","hashOfConfig":"26"},{"size":499,"mtime":1607415046892,"results":"43","hashOfConfig":"26"},{"size":660,"mtime":1607410510850,"results":"44","hashOfConfig":"26"},{"size":780,"mtime":1607412038244,"results":"45","hashOfConfig":"26"},{"size":1080,"mtime":1607412038265,"results":"46","hashOfConfig":"26"},{"size":244,"mtime":1607410510850,"results":"47","hashOfConfig":"26"},{"size":1741,"mtime":1607410510850,"results":"48","hashOfConfig":"26"},{"size":488,"mtime":1607425968454,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"53"},"4ooc9e",{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"53"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"53"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"53"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"53"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"53"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"53"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"53"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"53"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"53"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"53"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},"/Users/luigisiopongco/social-bubble-client/src/index.js",["110"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { loginReducer } from './Login/framework/reducer'\nimport {\n    bubble,\n    bubbleUsers,\n    bubblePosts,\n    user\n} from './Bubbles/framework/reducer'\nimport { Provider } from \"react-redux\"\n// import store from \"./common/redux/store\"\nimport thunk from \"redux-thunk\";\nimport { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport { BrowserRouter as Router } from \"react-router-dom\"\nimport 'semantic-ui-css/semantic.min.css'\n\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst rootReducer = combineReducers({\n    user: loginReducer,\n    bubble: bubble,\n    bubbleUsers: bubbleUsers,\n    bubblePosts: bubblePosts,\n})\n\nconst store = createStore(\n    rootReducer,\n    composeEnhancers(applyMiddleware(thunk))\n)\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Provider store = {store}>\n        <App />\n      </Provider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n",["111","112"],"/Users/luigisiopongco/social-bubble-client/src/App.js",[],"/Users/luigisiopongco/social-bubble-client/src/Bubbles/framework/reducer.js",["113","114"],"import { createReducer } from \"@reduxjs/toolkit\"\n\nimport {\n    onGetBubblePosts,\n    onGetBubbles,\n    onGetBubbleUsers,\n    onAddBubbles,\n    onDeleteBubble,\n    onUpdateUserStatus,\n} from \"./actions\"\n\nexport const user = createReducer(\n    {\n        user: {\n            id: 1,\n            firstName: \"John\",\n            lastName: \"Smith\",\n            email: \"johnsmith@email.com\",\n            password: \"password\",\n            user_status:\"green\"\n         }\n    },\n\n    {\n        [onUpdateUserStatus.type] : (state, {payload: user}) => {\n            return {...state, user}\n        }\n    },\n)\n\nexport const bubble = createReducer(\n    {\n        bubbleList: [],\n    },\n\n    {\n        [onAddBubbles.type]: (state, { payload: bubbleList }) => {\n            return { ...state, bubbleList: [\n                ...state.bubbleList,\n                bubbleList\n            ] }\n        },\n\n        [onGetBubbles.type]: (state, { payload: bubbleList }) => {\n            return { ...state, bubbleList }\n        },\n\n    }\n)\n\nexport const bubbleUsers = createReducer(\n    {\n        byId: [],\n    },\n    {\n        [onGetBubbleUsers.type]: (state, { payload: byId }) => {\n            return {...state, byId}\n        }\n    }\n\n)\n\nexport const bubblePosts = createReducer(\n    {\n        posts: [],\n    },\n\n    {\n        [onGetBubblePosts.type]: (state, { payload: posts }) => {\n            return { ...state, posts }\n        },\n\n    }\n)\n\nexport default { bubblePosts, bubble, bubbleUsers, user }\n","/Users/luigisiopongco/social-bubble-client/src/Login/framework/reducer.js",[],"/Users/luigisiopongco/social-bubble-client/src/Bubbles/framework/actions.js",[],"/Users/luigisiopongco/social-bubble-client/src/Login/framework/actions.js",[],"/Users/luigisiopongco/social-bubble-client/src/Login/ui/login.jsx",["115"],"import React, { useState } from \"react\"\nimport { NavLink } from \"react-router-dom\"\nimport { connect } from \"react-redux\"\nimport \"./login.css\"\nimport { setAuthenticationHeader } from \"../../utils/Auth\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\"\nimport GetUserBubbles from \"../../Bubbles/use-cases/getUserBubbles\";\nimport GetLoggedInUser from \"../use-cases/getLoggedInUser\";\n// import {SendLogin} from '../use-cases/user-login'\n\nfunction Login(props, getUser) {\n    const [fields, setFields] = useState({})\n    const history = useHistory();\n\n    // const [loginStatus, setloginStatus] = useState({})\n\n    function setField(evt) {\n        setFields({\n            ...fields,\n            [evt.target.name]: evt.target.value\n        })\n    }\n\n    function performLoginRequest() {\n        axios\n            .post(\"http://localhost:8080/auth/login\", {\n            email: fields.email,\n            password: fields.password\n        })\n        .then((response) =>{\n            if (response.data.success) {\n                const token = response.data.token;\n                localStorage.setItem(\"jsonwebtoken\", token);\n                setAuthenticationHeader(token);\n                props.onAuthenticated();\n                props.getUser(fields);\n                alert(response.data.message);\n                history.push(\"/\");\n            } else {\n                alert(response.data.message);\n                alert(\"response failed\");\n                setFields({\n                ...fields,\n                password: \"\",\n                });\n            }\n        })\n    }\n\n            /*fetch('http://localhost:8080/login',{\n              method: 'POST', \n              headers: {\n                'Content-Type': 'application/json'\n              }, \n              body: JSON.stringify(fields)\n            }).then(response => response.json())\n            .then(result => {\n              if(result.success) {\n                // logged in successfully \n                // dispatch an action and update the isAuthenticated to true */\n             /* }\n            })*/\n        //   }\n    // console.log(fields)\n\n\n    return (\n        <div className=\"login-container\">\n            <div className=\"logo\">Social Bubble\n            </div>\n            <div className=\"login-form\">\n                {/* <form className=\"login-form\"> */}\n                    <div className=\"username-container\">\n                        <label>Username</label>\n                        <input className=\"username-input\"\n                            name=\"email\"\n                            type=\"email\"\n                            // value={fields.email}\n                            onChange={setField}>\n                        </input>\n                    </div>\n                    <div className=\"password-container\">\n                        <label>Password</label>\n                        <input className=\"password-input\"\n                            name=\"password\"\n                            type=\"password\"\n                            // value={fields.password}\n                            onChange={setField}>\n                        </input>\n                    </div>\n                    <button\n                    onClick={performLoginRequest}\n                    // type=\"submit\"\n                    // className=\"login-btn\"\n                    >\n                    Login\n                    </button>\n                {/* </form> */}\n            </div>\n            <div>\n                <NavLink to =\"/dashboard\">Dashboard</NavLink>\n            </div>\n            <div className=\"signup-link\">\n                <p>Not a user? <NavLink to=\"/register\">Register</NavLink></p>\n            </div>\n        </div>\n    )\n}\n\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        // onAuthenticated: () => dispatch(actionCreators.authenticated(true)),\n        // onAuthenticated: () => dispatch(true)  isAuthenticated: true  \n        getUser: GetLoggedInUser(dispatch),\n        onAuthenticated: () => dispatch({type: 'user.login'})  \n    }\n//         onUserLogin: SendLogin(dispatch)\n}\n\nexport default connect(null, mapDispatchToProps)(Login)\n\n// const mapDispatchToProps = (dispatch) => {\n//     return {\n//         onUserLogin: () => dispatch({ type: 'ON_LOGIN' })\n//     }\n// };\n\n// export default connect(null, mapDispatchToProps)(Login)\n\n// import React, { useState } from \"react\"\n// import { NavLink } from \"react-router-dom\"\n// import { connect } from \"react-redux\"\n// import \"./login.css\"\n// import { setAuthenticationHeader } from \"../../utils/Auth\";\n\n// import { UserLogin } from '../use-cases/user-login'\n// import axios from \"axios\";\n  \n// function Login(props) {\n    \n    // const [adminUser, setAdminUser] = useState({});\n    // const [guestUser] = useState({\n    //   username: \"David\",\n    //   password: \"1234\",\n    // });\n\n    // handleLogin = (e) => {\n    //     this.setState({\n    //       user: {\n    //         ...this.state.user,\n    //         [e.target.name]: e.target.value,\n    //       },\n    //     });\n    //   };\n//   const [fields, setFields] = useState({})\n//       function handleLogin(e) {\n      \n//         setFields({\n//           ...fields,\n//           [e.target.name]: e.target.value,\n//         });\n//       }\n    \n    //   function handleAdminLogin(e) {\n    //     setAdminUser({\n    //       ...adminUser,\n    //       [e.target.name]: e.target.value,\n    //     });\n    //   }\n\n\n    // axios.defaults.withCredentials = true;\n\n//     function handleLoginPost(){\n//          axios\n//          .post(\"http://localhost:8080/auth/login\", {\n//             email: fields.email,\n//             password: fields.password\n//         })\n//                 .then((response) =>{\n//                     if (response.data.success) {\n//                         const token = response.data.token;\n//                         localStorage.setItem(\"jsonwebtoken\", token);\n//                         setAuthenticationHeader(token);\n//                         props.onLogin();\n//                         alert(response.data.message);\n//                         props.history.push(\"/\");\n//                     } else {\n//                         alert(response.data.message);\n//                         alert(\"response failed\");\n//                         setFields({\n//                         ...fields,\n//                         password: \"\",\n//                         });\n//                     }\n//     })\n// }\n \n\n    // function handleAdminPost() {\n    //     axios\n    //       .post(\"https://react-redux-bookstore-server.herokuapp.com/login/admin\", {\n    //         // .post(\"http://localhost:3001/login/admin\", {\n    //         username: adminUser.adminUsername,\n    //         password: adminUser.adminPassword,\n    //       })\n    //       .then((response) => {\n    //         if (response.data.success) {\n    //           const token = response.data.token;\n    //           localStorage.setItem(\"jsonwebtoken\", token);\n    //           setAuthenticationHeader(token);\n    //           props.onAuthenticated();\n    //           props.onAdministrator();\n    //           alert(response.data.message);\n    //           props.history.push(\"/Admin\");\n    //         } else {\n    //           alert(response.data.message);\n    //           alert(\"response failed\");\n    //           setAdminUser({\n    //             ...adminUser,\n    //             password: \"\",\n    //           });\n    //         }\n    //       });\n    //   }\n\n    // function guestLoginPost() {\n    //     fetch(\"https://react-redux-bookstore-server.herokuapp.com/login/guest\", {\n    //       method: \"POST\",\n    //       headers: {\n    //         \"Content-Type\": \"application/json\",\n    //       },\n    //       body: JSON.stringify(guestUser),\n    //     })\n    //       .then((res) => res.json())\n    //       .then((response) => {\n    //         if (response.success) {\n    //           props.onAuthenticated();\n    //           alert(response.message);\n    //           props.history.push(\"/\");\n    //         } else {\n    //           alert(response.message);\n    //           setUser({\n    //             ...user,\n    //             password: \"\",\n    //           });\n    //         }\n    //       });\n    //   }\n\n    // function userAuthenticated() {\n    //     fetch\n    //     Axios.post(\"http://localhost:8080/isUserAuth\", {\n    //         headers: {\n    //             \"x-access-token\": localStorage.getItem(\"token\"),\n    //         },\n    //     })\n    //         console.log(response);\n    // };\n\n\n    \n\n//     return (\n//         <>\n\n//         <div className=\"login-container\">\n//             <div className=\"logo\">Social Bubble</div>\n//             <form className=\"login-form\" onSubmit={Login}>\n//                 <div className=\"username-container\">\n//                     <label>Email</label>\n//                     <input className=\"username-input\"\n//                         name=\"email\"\n//                         type=\"email\"\n//                         value={fields.email}\n//                         onChange={handleLogin}>\n//                     </input>\n//                 </div>\n//                 <div className=\"password-container\">\n//                     <label>Password</label>\n//                     <input className=\"password-input\"\n//                         name=\"password\"\n//                         type=\"password\"\n//                         value={fields.password}\n//                         onChange={handleLogin}>\n//                     </input>\n//                 </div>\n//                 <button\n//           onClick={handleLoginPost}\n//           type=\"button\"\n//           className=\"login-btn\"\n//         >\n//           Login\n//         </button>\n//             <button type=\"submit\" onClick={handleLoginPost} > \n//             User Login \n//             </button>\n            \n//             </form>\n\n\n\n\n\n//             <div className=\"signup-link\">\n//                 <p>Not a user? <NavLink to=\"/register/\">Register</NavLink></p>\n//             </div>\n//         </div>\n\n//     </>\n//   );\n// }\n\n\n\n// const mapDispatchToProps = (dispatch) => {\n//     return {\n//         onLogin: () => dispatch({ type: 'ON_LOGIN' })\n//     }\n// };\n\n// export default connect(null, mapDispatchToProps)(Login)","/Users/luigisiopongco/social-bubble-client/src/Login/ui/register.jsx",[],"/Users/luigisiopongco/social-bubble-client/src/Bubbles/ui/Dashboard.jsx",["116","117","118","119","120","121","122","123"],"import React, { useEffect, useState } from \"react\"\nimport { Link } from \"react-router-dom\"\nimport { connect } from \"react-redux\"\nimport \"./dashboard.css\"\nimport { GetUserBubbles } from \"../use-cases/getUserBubbles\"\nimport { GetBubbleUsers } from \"../use-cases/getBubbleUsers\"\nimport { AddNewBubble } from \"../use-cases/addNewBubble\"\nimport {UpdateUserStatus} from \"../use-cases/updateUserStatus\"\n\nimport { Image, Dropdown, Input, Button, Card, Header, Icon } from 'semantic-ui-react'\nimport Navbar from \"../../Navbar/Navbar\"\n\n\nexport const Dashboard = ({ bubbles, getBubbles, addNewBubble, getBubbleUsers, updateUserStatus, user}) => {\n   const [loading, setLoading] = useState(true)\n   const [adding, setAdding] = useState(false)\n   const [fields, setFields] = useState({})\n   const [userStatus, setUserStatus] = useState('green')\n   const [statusText, setStatusText] = useState('Healthy')\n\n   let status = user.user.user_status\n   \n    if (userStatus === 'green') {\n      let statusText = \"You are healthy\"\n    } else if (userStatus === 'yellow') {\n       let statusText = \"You are at risk\"\n    } else if (userStatus === 'red') {\n      let statusText = \"You are sick\"\n    }\nconsole.log(bubbles)\n\n\n   const setField = (evt) =>\n      setFields({\n         ...fields,\n         [evt.target.name]: evt.target.value\n      })\n   console.log(fields)\n\n   console.log(bubbles.bubbleList)\n\n   useEffect(() => {\n      console.log(user.user)\n      getBubbles(user.user.id)\n   }, [])\n\n\n   if (bubbles.bubbleList === []) {\n   }\n\n   else {\n      const list = bubbles.bubbleList\n      const userId = user.user.id\n      \n      const handleUpdateStatus = (evt) => {\n         console.log(evt.target.value)\n         \n         setUserStatus(evt.target.value)\n\n         \n\n      }\n\n      return (\n         <div className=\"dashboard-container\">\n            <div className='nav-component-container'>\n               {/* <Nav /> */}\n               <Navbar />\n            </div>\n            <div className=\"dashboard-username\">John Smith</div>\n            <Image src=\"stock-profile.png\" className={\"profile-image image-\" + status}/>\n            <div className= {\"dashboard-status \" + status}>{statusText}</div>\n\n            <div className=\"user-status-container\">\n            {/* <Dropdown className=\"select-status\"\n               placeholder='Select Status'\n               fluid\n               selection\n               name = 'selected-status'\n               onChange = {handleUpdateStatus}\n            /> */}\n            <select onChange={handleUpdateStatus}>\n               <option value=\"green\">I am healthy</option>\n               <option value=\"yellow\">I am at risk</option>\n               <option value=\"red\">I am sick</option>\n            </select>\n            <Button primary onClick = {() => {\n               updateUserStatus(userStatus)\n\n               if (userStatus === 'green') {\n                 setStatusText(\"Healthy\")\n               } else if (userStatus === 'yellow') {\n                  setStatusText(\"At Risk\")\n               } else if (userStatus === 'red') {\n                  setStatusText(\"Sick\")\n               }\n               \n               }}>Update Status</Button>\n            </div>\n            \n            {(adding === true) ?\n               <div className=\"add-to-bubble\">\n                  <Input className=\"status-input\" placeholder=\"Create new bubble\"\n                     name=\"title\"\n                     type=\"text\"\n                     value={fields.title}\n                     onChange={setField}>\n                  </Input>\n                  <button className=\"\" onClick={() => addNewBubble(fields, userId)}>Add</button>\n               </div>\n               :\n               <Button primary onClick={() => setAdding(true)}>Create a new Bubble</Button>\n            }\n\n            <div className=\"bubble-lists \"> <h1 className=\"bubble-lists-title\">Your Bubbles</h1> </div>\n            <div>\n               {list.map((item) => (\n                  <Link to = {`/bubbles/${item.id}`} > \n                     <Card\n                        key={item.id}\n                        header={item.title}\n                        meta='Test'\n                        description='A group for friends'\n                     >\n                        <div className=\"card-headers\">\n                           <Header as='h3'>{item.title}</Header>\n                           <Icon name='trash' ></Icon>\n                        </div>\n                     </Card>\n                  </Link>\n         \n               ))}\n            </div>\n         </div>\n      )\n   }\n\n\n}\n\nconst mapStateToProps = (state, { bubbles }) => ({\n   bubbles: state.bubble,\n   user: state.user\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n   getBubbles: GetUserBubbles(dispatch),\n   addNewBubble: AddNewBubble(dispatch),\n   updateUserStatus: UpdateUserStatus(dispatch)\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard)","/Users/luigisiopongco/social-bubble-client/src/Bubbles/ui/Members.jsx",["124","125"],"import React, { useEffect, useState } from 'react'\nimport { Link } from \"react-router-dom\"\nimport {connect} from \"react-redux\"\nimport {GetBubbleUsers} from '../use-cases/getBubbleUsers'\nimport { Button, Card, Image } from 'semantic-ui-react'\nimport Nav from \"../../Login/ui/nav\"\n\n\n\n\nexport const Members = ({getBubbleUsers, bubbleUsers}) => {\n    const bubbleId = 2\n    console.log(bubbleUsers.byId)\n\n    useEffect(()=> {\n        getBubbleUsers(8)\n    },[])\n\n    if (bubbleUsers.byId === []) {\n        \n    }\n    else{\n        return (\n            <div className=\"bubbles-container\">\n                <Nav/>\n                <h1 className=\"bubble-title\">Family</h1>\n                <div className=\"toggle\">\n                <Link to = {`/bubbles/${bubbleId}}`}><Button className=\"links\" primary color='blue'>Activities</Button> </Link>\n                <Link to ={`/members/${bubbleId}}`}><Button className=\"links\" primary color='blue'>Members</Button></Link>\n    \n                </div>\n                <div className=\"bubble-status\">This bubble is at risk!</div>      \n                {bubbleUsers.byId.map((item) => (\n                    \n                    <div> <Card>\n      <Card.Content>\n        <Image\n          floated='right'\n          size='mini'\n          src='stock-profile.png'\n        />\n        <Card.Header>{item.first_name}</Card.Header>\n        <Card.Meta>Member</Card.Meta>\n      </Card.Content>\n      <Card.Content extra>\n        <div className='ui two buttons'>\n          <Button basic color='green'>\n            Approve\n          </Button>\n          <Button basic color='red'>\n            Decline\n          </Button>\n        </div>\n      </Card.Content>\n    </Card></div>\n                ))}\n        <Link to ={`/members/${bubbleId}}/add-member`}><Button className=\"links\" basic color='blue'>Add Member</Button></Link>\n            </div>\n        )\n    }\n    }\n    \n\n\nconst mapStateToProps = (state, {users}) => ({\n    bubbleUsers: state.bubbleUsers\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    getBubbleUsers: GetBubbleUsers(dispatch),\n    //addBubbleUsers: AddBubbleUsers(dispatch)\n})\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Members)\n\n","/Users/luigisiopongco/social-bubble-client/src/Bubbles/ui/AddMember.jsx",["126","127","128","129","130","131","132"],"import React, { useEffect, useState } from 'react'\nimport { Link } from \"react-router-dom\"\nimport {connect} from \"react-redux\"\nimport {GetBubbleUsers} from '../use-cases/getBubbleUsers'\nimport {AddBubbleMember} from \"../use-cases/addBubbleMember\"\nimport { Button, Card, Image, Input } from 'semantic-ui-react'\nimport Nav from \"../../Login/ui/nav\"\n\nexport const AddMember = ({addMember}) => {\n\n   const bubbleId = 2\n\n   const [fields, setFields] = useState({})\n   const setField = (evt) =>\n   setFields({\n      ...fields,\n      [evt.target.name]: evt.target.value\n   })\nconsole.log(fields)\n\n   return (\n      <div className=\"addMember-container\">\n          <h1> Add Member</h1>\n          <div className=\"ui input\"> \n          <label>User's Email:</label>\n          <input type=\"text\" placeholder=\"Email Address\" value={fields.email} onChange={setField}/> \n          <Button onClick={() => addMember(fields, bubbleId)} basic color='green'>\n            Add Member\n          </Button>\n          </div> \n      </div>\n   )\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n   addMember: AddBubbleMember(dispatch)\n})\n\n\nexport default connect(null, mapDispatchToProps)(AddMember)","/Users/luigisiopongco/social-bubble-client/src/BubbleBuilder/ui/BubbleBuilder.jsx",[],"/Users/luigisiopongco/social-bubble-client/src/Bubbles/ui/Bubbles.jsx",["133","134","135","136","137"],"/Users/luigisiopongco/social-bubble-client/src/utils/Auth.js",[],"/Users/luigisiopongco/social-bubble-client/src/Bubbles/use-cases/getBubblePosts.js",[],"/Users/luigisiopongco/social-bubble-client/src/Bubbles/use-cases/addBubbleMember.js",["138"],"import { onAddBubbleMember} from '../framework/actions'\n\nexport const AddBubbleMember = (dispatch) => async (\n    fields, bubbleId\n) => {\n    \n    const bubbleId = bubbleId\n    const email = fields.email\n\n    const response = await fetch(`http://localhost:8080/${bubbleId}/bubbleuser`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body:{\n            email: email\n        }\n    })\n    let bubbleUser = await response.json()\n       \n    return dispatch(onAddBubbleMember(bubbleUser))\n\n}\n    \n\nexport default AddBubbleMember","/Users/luigisiopongco/social-bubble-client/src/Bubbles/use-cases/getBubbleUsers.js",["139"],"import { onGetBubbleUsers } from '../framework/actions'\n\nexport const GetBubbleUsers = (dispatch) => async (\n    bubble\n) => {\n\n    //const bubbleId = bubble.id\n    const bubbleId = { id: bubble }\n\n\n    const response = await fetch(`http://localhost:8080/bubble/13/users`, {\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n    })\n\n    let bubbleUsers = await response.json()\n\n    return dispatch(onGetBubbleUsers(bubbleUsers))\n}\n\nexport default GetBubbleUsers\n","/Users/luigisiopongco/social-bubble-client/src/Bubbles/use-cases/getUserBubbles.js",["140"],"import {onGetBubbles} from '../framework/actions'\n\nexport const GetUserBubbles = (dispatch) => async(\n    user\n) => {\n    \n    const userId = {id: user.id}\n\n    const response = await fetch(`http://localhost:8080/user/10/bubbles`,{\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        }, \n      })\n    console.log('testing bubbles work?')\n    let bubble = await response.json()\n    return dispatch(onGetBubbles(bubble))\n    }\n\nexport default GetUserBubbles\n","/Users/luigisiopongco/social-bubble-client/src/Bubbles/use-cases/updateUserStatus.js",["141"],"import {onUpdateUserStatus} from '../framework/actions'\n\nexport const UpdateUserStatus = (dispatch) => async(\n    user\n) => {\n\n    const userStatus = {user_status: user}\n\n    /*const reponse = await fetch (`http://localhost:8080/`, {\n        method:'PUT',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body:{\n            user_status: user\n        }\n    })*/\n\n    //let status = await response.json()\n\n    return dispatch(onUpdateUserStatus({\n        id: 1,\n        firstName: \"John\",\n        lastName: \"Smith\",\n        email: \"johnsmith@email.com\",\n        password: \"password\",\n        user_status: user\n    }))\n\n\n\n\n\n\n\n}","/Users/luigisiopongco/social-bubble-client/src/Bubbles/use-cases/addNewBubble.js",[],"/Users/luigisiopongco/social-bubble-client/src/Navbar/Navbar.jsx",[],"/Users/luigisiopongco/social-bubble-client/src/Login/ui/landingPage.jsx",[],"/Users/luigisiopongco/social-bubble-client/src/Login/ui/nav.jsx",["142","143","144","145","146"],"import React, { Component, useState } from 'react'\nimport { Menu, Button, Grid} from 'semantic-ui-react'\nimport { Link } from 'react-router-dom'\nimport \"./nav.css\"\n\nconst Nav = () => {\n    const [state, setState] = useState(\"\")\n    const [activeItem, setActiveItem] = useState(\"\")\n\n\n    const handleItemClick = (name) => {\n        setActiveItem(name)\n    }\n\n\n    return (\n        <Menu className=\"nav-container\">\n            <Link to='/dashboard'>\n                <Menu.Item\n                    name='Home'\n                    active={activeItem === 'Home'}\n                    onClick={() => handleItemClick('Home')}\n                >\n                    Home\n        </Menu.Item>\n            </Link>\n\n            <Link to='/bubbles'>\n                <Menu.Item\n                    name='Contacts'\n                    active={activeItem === 'Contacts'}\n                    onClick={() => handleItemClick('Contacts')}\n                >\n                    Contacts\n            </Menu.Item>\n            </Link>\n\n            <Link to='/'>\n                <Menu.Item\n                    name='Information'\n                    active={activeItem === 'Information'}\n                    onClick={() => handleItemClick('Information')}\n                >\n                    Information\n            </Menu.Item>\n            </Link>\n\n            <Menu.Menu position='right'>\n                <Link to='/login'>\n                    <Menu.Item>\n                        Login\n                </Menu.Item>\n                </Link>\n\n                <Link to=\"/register\">\n                    <Menu.Item>\n                        Sign Up\n                </Menu.Item>\n                </Link>\n            </Menu.Menu>\n        </Menu>\n\n    )\n}\n\n\nexport default Nav","/Users/luigisiopongco/social-bubble-client/src/Login/use-cases/getLoggedInUser.js",[],{"ruleId":"147","severity":1,"message":"148","line":10,"column":5,"nodeType":"149","messageId":"150","endLine":10,"endColumn":9},{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","replacedBy":"154"},{"ruleId":"147","severity":1,"message":"155","line":8,"column":5,"nodeType":"149","messageId":"150","endLine":8,"endColumn":19},{"ruleId":"156","severity":1,"message":"157","line":76,"column":1,"nodeType":"158","endLine":76,"endColumn":58},{"ruleId":"147","severity":1,"message":"159","line":8,"column":8,"nodeType":"149","messageId":"150","endLine":8,"endColumn":22},{"ruleId":"147","severity":1,"message":"160","line":6,"column":10,"nodeType":"149","messageId":"150","endLine":6,"endColumn":24},{"ruleId":"147","severity":1,"message":"161","line":10,"column":17,"nodeType":"149","messageId":"150","endLine":10,"endColumn":25},{"ruleId":"147","severity":1,"message":"162","line":15,"column":11,"nodeType":"149","messageId":"150","endLine":15,"endColumn":18},{"ruleId":"147","severity":1,"message":"163","line":15,"column":20,"nodeType":"149","messageId":"150","endLine":15,"endColumn":30},{"ruleId":"147","severity":1,"message":"164","line":24,"column":11,"nodeType":"149","messageId":"150","endLine":24,"endColumn":21},{"ruleId":"147","severity":1,"message":"164","line":26,"column":12,"nodeType":"149","messageId":"150","endLine":26,"endColumn":22},{"ruleId":"147","severity":1,"message":"164","line":28,"column":11,"nodeType":"149","messageId":"150","endLine":28,"endColumn":21},{"ruleId":"165","severity":1,"message":"166","line":45,"column":7,"nodeType":"167","endLine":45,"endColumn":9,"suggestions":"168"},{"ruleId":"147","severity":1,"message":"169","line":1,"column":28,"nodeType":"149","messageId":"150","endLine":1,"endColumn":36},{"ruleId":"165","severity":1,"message":"170","line":17,"column":7,"nodeType":"167","endLine":17,"endColumn":9,"suggestions":"171"},{"ruleId":"147","severity":1,"message":"172","line":1,"column":17,"nodeType":"149","messageId":"150","endLine":1,"endColumn":26},{"ruleId":"147","severity":1,"message":"173","line":2,"column":10,"nodeType":"149","messageId":"150","endLine":2,"endColumn":14},{"ruleId":"147","severity":1,"message":"160","line":4,"column":9,"nodeType":"149","messageId":"150","endLine":4,"endColumn":23},{"ruleId":"147","severity":1,"message":"174","line":6,"column":18,"nodeType":"149","messageId":"150","endLine":6,"endColumn":22},{"ruleId":"147","severity":1,"message":"175","line":6,"column":24,"nodeType":"149","messageId":"150","endLine":6,"endColumn":29},{"ruleId":"147","severity":1,"message":"176","line":6,"column":31,"nodeType":"149","messageId":"150","endLine":6,"endColumn":36},{"ruleId":"147","severity":1,"message":"177","line":7,"column":8,"nodeType":"149","messageId":"150","endLine":7,"endColumn":11},{"ruleId":"147","severity":1,"message":"169","line":1,"column":28,"nodeType":"149","messageId":"150","endLine":1,"endColumn":36},{"ruleId":"147","severity":1,"message":"148","line":12,"column":10,"nodeType":"149","messageId":"150","endLine":12,"endColumn":14},{"ruleId":"147","severity":1,"message":"178","line":17,"column":11,"nodeType":"149","messageId":"150","endLine":17,"endColumn":15},{"ruleId":"165","severity":1,"message":"179","line":24,"column":8,"nodeType":"167","endLine":24,"endColumn":10,"suggestions":"180"},{"ruleId":"181","severity":1,"message":"182","line":34,"column":34,"nodeType":"183","messageId":"184","endLine":34,"endColumn":36},{"ruleId":"185","severity":1,"message":"186","line":7,"column":11,"nodeType":"149","messageId":"187","endLine":7,"endColumn":19},{"ruleId":"147","severity":1,"message":"188","line":8,"column":11,"nodeType":"149","messageId":"150","endLine":8,"endColumn":19},{"ruleId":"147","severity":1,"message":"189","line":7,"column":11,"nodeType":"149","messageId":"150","endLine":7,"endColumn":17},{"ruleId":"147","severity":1,"message":"190","line":7,"column":11,"nodeType":"149","messageId":"150","endLine":7,"endColumn":21},{"ruleId":"147","severity":1,"message":"191","line":1,"column":17,"nodeType":"149","messageId":"150","endLine":1,"endColumn":26},{"ruleId":"147","severity":1,"message":"192","line":2,"column":16,"nodeType":"149","messageId":"150","endLine":2,"endColumn":22},{"ruleId":"147","severity":1,"message":"193","line":2,"column":24,"nodeType":"149","messageId":"150","endLine":2,"endColumn":28},{"ruleId":"147","severity":1,"message":"194","line":7,"column":12,"nodeType":"149","messageId":"150","endLine":7,"endColumn":17},{"ruleId":"147","severity":1,"message":"195","line":7,"column":19,"nodeType":"149","messageId":"150","endLine":7,"endColumn":27},"no-unused-vars","'user' is defined but never used.","Identifier","unusedVar","no-native-reassign",["196"],"no-negated-in-lhs",["197"],"'onDeleteBubble' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'GetUserBubbles' is defined but never used.","'GetBubbleUsers' is defined but never used.","'Dropdown' is defined but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'statusText' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getBubbles' and 'user.user'. Either include them or remove the dependency array. If 'getBubbles' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["198"],"'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'getBubbleUsers'. Either include it or remove the dependency array. If 'getBubbleUsers' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["199"],"'useEffect' is defined but never used.","'Link' is defined but never used.","'Card' is defined but never used.","'Image' is defined but never used.","'Input' is defined but never used.","'Nav' is defined but never used.","'test' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'bubbleId', 'getBubbleUsers', 'getPosts', and 'user.id'. Either include them or remove the dependency array. If 'getPosts' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["200"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-redeclare","'bubbleId' is already defined.","redeclared","'bubbleId' is assigned a value but never used.","'userId' is assigned a value but never used.","'userStatus' is assigned a value but never used.","'Component' is defined but never used.","'Button' is defined but never used.","'Grid' is defined but never used.","'state' is assigned a value but never used.","'setState' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"201","fix":"202"},{"desc":"203","fix":"204"},{"desc":"205","fix":"206"},"Update the dependencies array to be: [getBubbles, user.user]",{"range":"207","text":"208"},"Update the dependencies array to be: [getBubbleUsers]",{"range":"209","text":"210"},"Update the dependencies array to be: [bubbleId, getBubbleUsers, getPosts, user.id]",{"range":"211","text":"212"},[1467,1469],"[getBubbles, user.user]",[454,456],"[getBubbleUsers]",[818,820],"[bubbleId, getBubbleUsers, getPosts, user.id]"]