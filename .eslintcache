[{"/Users/boris/Desktop/Projects/Bubble/social-bubble-client/src/index.js":"1","/Users/boris/Desktop/Projects/Bubble/social-bubble-client/src/App.js":"2","/Users/boris/Desktop/Projects/Bubble/social-bubble-client/src/Login/framework/reducer.js":"3","/Users/boris/Desktop/Projects/Bubble/social-bubble-client/src/Bubbles/framework/reducer.js":"4","/Users/boris/Desktop/Projects/Bubble/social-bubble-client/src/Login/ui/register.jsx":"5","/Users/boris/Desktop/Projects/Bubble/social-bubble-client/src/Login/ui/login.jsx":"6","/Users/boris/Desktop/Projects/Bubble/social-bubble-client/src/Login/ui/landingPage.jsx":"7","/Users/boris/Desktop/Projects/Bubble/social-bubble-client/src/Bubbles/ui/AddMember.jsx":"8","/Users/boris/Desktop/Projects/Bubble/social-bubble-client/src/Login/framework/actions.js":"9","/Users/boris/Desktop/Projects/Bubble/social-bubble-client/src/Bubbles/ui/Dashboard.jsx":"10","/Users/boris/Desktop/Projects/Bubble/social-bubble-client/src/Bubbles/ui/Bubbles.jsx":"11","/Users/boris/Desktop/Projects/Bubble/social-bubble-client/src/BubbleBuilder/ui/BubbleBuilder.jsx":"12","/Users/boris/Desktop/Projects/Bubble/social-bubble-client/src/Bubbles/ui/Members.jsx":"13","/Users/boris/Desktop/Projects/Bubble/social-bubble-client/src/Bubbles/framework/actions.js":"14","/Users/boris/Desktop/Projects/Bubble/social-bubble-client/src/Bubbles/use-cases/getBubbleUsers.js":"15","/Users/boris/Desktop/Projects/Bubble/social-bubble-client/src/utils/Auth.js":"16","/Users/boris/Desktop/Projects/Bubble/social-bubble-client/src/Bubbles/use-cases/getUserBubbles.js":"17","/Users/boris/Desktop/Projects/Bubble/social-bubble-client/src/Login/use-cases/getLoggedInUser.js":"18","/Users/boris/Desktop/Projects/Bubble/social-bubble-client/src/Bubbles/use-cases/getBubblePosts.js":"19","/Users/boris/Desktop/Projects/Bubble/social-bubble-client/src/Bubbles/use-cases/addBubbleMember.js":"20","/Users/boris/Desktop/Projects/Bubble/social-bubble-client/src/Bubbles/use-cases/addNewBubble.js":"21","/Users/boris/Desktop/Projects/Bubble/social-bubble-client/src/Bubbles/use-cases/deleteBubble.js":"22","/Users/boris/Desktop/Projects/Bubble/social-bubble-client/src/Bubbles/use-cases/updateUserStatus.js":"23","/Users/boris/Desktop/Projects/Bubble/social-bubble-client/src/Bubbles/use-cases/addBubblePost.js":"24","/Users/boris/Desktop/Projects/Bubble/social-bubble-client/src/Login/ui/nav.jsx":"25","/Users/boris/Desktop/Projects/Bubble/social-bubble-client/src/Navbar/Navbar.jsx":"26"},{"size":1289,"mtime":1607448263103,"results":"27","hashOfConfig":"28"},{"size":1535,"mtime":1607448263094,"results":"29","hashOfConfig":"28"},{"size":2578,"mtime":1607486833169,"results":"30","hashOfConfig":"28"},{"size":1595,"mtime":1607486833164,"results":"31","hashOfConfig":"28"},{"size":2947,"mtime":1607448263101,"results":"32","hashOfConfig":"28"},{"size":10187,"mtime":1607484388940,"results":"33","hashOfConfig":"28"},{"size":1841,"mtime":1607472521420,"results":"34","hashOfConfig":"28"},{"size":2218,"mtime":1607484388936,"results":"35","hashOfConfig":"28"},{"size":692,"mtime":1607448263099,"results":"36","hashOfConfig":"28"},{"size":4849,"mtime":1607486833165,"results":"37","hashOfConfig":"28"},{"size":7356,"mtime":1607487121162,"results":"38","hashOfConfig":"28"},{"size":2530,"mtime":1607448263095,"results":"39","hashOfConfig":"28"},{"size":3607,"mtime":1607487124791,"results":"40","hashOfConfig":"28"},{"size":670,"mtime":1607486833164,"results":"41","hashOfConfig":"28"},{"size":520,"mtime":1607448263098,"results":"42","hashOfConfig":"28"},{"size":239,"mtime":1607448263103,"results":"43","hashOfConfig":"28"},{"size":499,"mtime":1607448263098,"results":"44","hashOfConfig":"28"},{"size":488,"mtime":1607448263101,"results":"45","hashOfConfig":"28"},{"size":516,"mtime":1607448263097,"results":"46","hashOfConfig":"28"},{"size":575,"mtime":1607472521415,"results":"47","hashOfConfig":"28"},{"size":578,"mtime":1607486833166,"results":"48","hashOfConfig":"28"},{"size":460,"mtime":1607486833166,"results":"49","hashOfConfig":"28"},{"size":573,"mtime":1607486833168,"results":"50","hashOfConfig":"28"},{"size":539,"mtime":1607486833165,"results":"51","hashOfConfig":"28"},{"size":1741,"mtime":1607447144667,"results":"52","hashOfConfig":"28"},{"size":1263,"mtime":1607484388941,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"57"},"eosvu3",{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"57"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"57"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"57"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"57"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"57"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"57"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"57"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"57"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"57"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"57"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"57"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/boris/Desktop/Projects/Bubble/social-bubble-client/src/index.js",["119"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { loginReducer } from './Login/framework/reducer'\nimport {\n    bubble,\n    bubbleUsers,\n    bubblePosts,\n    user\n} from './Bubbles/framework/reducer'\nimport { Provider } from \"react-redux\"\n// import store from \"./common/redux/store\"\nimport thunk from \"redux-thunk\";\nimport { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport { BrowserRouter as Router } from \"react-router-dom\"\nimport 'semantic-ui-css/semantic.min.css'\n\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst rootReducer = combineReducers({\n    user: loginReducer,\n    bubble: bubble,\n    bubbleUsers: bubbleUsers,\n    bubblePosts: bubblePosts,\n})\n\nconst store = createStore(\n    rootReducer,\n    composeEnhancers(applyMiddleware(thunk))\n)\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Provider store = {store}>\n        <App />\n      </Provider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n",["120","121"],"/Users/boris/Desktop/Projects/Bubble/social-bubble-client/src/App.js",[],"/Users/boris/Desktop/Projects/Bubble/social-bubble-client/src/Login/framework/reducer.js",[],"/Users/boris/Desktop/Projects/Bubble/social-bubble-client/src/Bubbles/framework/reducer.js",["122"],"import { createReducer } from \"@reduxjs/toolkit\"\n\nimport {\n    onGetBubblePosts,\n    onAddBubblePost,    \n    onGetBubbles,\n    onGetBubbleUsers,\n    onAddBubbles,\n    onDeleteBubble,\n} from \"./actions\"\n\nexport const bubble = createReducer(\n    {\n        bubbleList: [],\n    },\n\n    {\n        [onAddBubbles.type]: (state, { payload: bubbleList }) => {\n            return { ...state, bubbleList: [\n                ...state.bubbleList,\n                bubbleList\n            ] }\n        },\n\n        [onGetBubbles.type]: (state, { payload: bubbleList }) => {\n            return { ...state, bubbleList }\n        },\n\n        [onDeleteBubble.type] : (state, {payload: bubbleId}) => {\n            let arr = state.bubbleList\n            let bubbleList = []\n            arr.forEach((element) => {\n                if (element.id !== bubbleId){\n                    bubbleList.push(element)\n                }\n            })\n            return { ...state, bubbleList}\n        }\n\n    }\n)\n\nexport const bubbleUsers = createReducer(\n    {\n        byId: [],\n    },\n    {\n        [onGetBubbleUsers.type]: (state, { payload: byId }) => {\n            return {...state, byId}\n        }\n    }\n\n)\n\nexport const bubblePosts = createReducer(\n    {\n        posts: [],\n    },\n    {\n        [onGetBubblePosts.type]: (state, { payload: posts }) => {\n            return { ...state, posts }\n        },\n        [onAddBubblePost.type]: (state, {payload: post}) =>{\n            return { ...state, posts:[\n                ...state.posts, post\n            ]}\n        }\n\n    }\n)\n\nexport default { bubblePosts, bubble, bubbleUsers }\n","/Users/boris/Desktop/Projects/Bubble/social-bubble-client/src/Login/ui/register.jsx",[],"/Users/boris/Desktop/Projects/Bubble/social-bubble-client/src/Login/ui/login.jsx",["123"],"import React, { useState } from \"react\"\nimport { NavLink } from \"react-router-dom\"\nimport { connect } from \"react-redux\"\nimport \"./login.css\"\nimport { setAuthenticationHeader } from \"../../utils/Auth\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\"\nimport GetUserBubbles from \"../../Bubbles/use-cases/getUserBubbles\";\nimport GetLoggedInUser from \"../use-cases/getLoggedInUser\";\n// import {SendLogin} from '../use-cases/user-login'\n\nfunction Login(props, getUser) {\n    const [fields, setFields] = useState({})\n    const history = useHistory();\n\n    // const [loginStatus, setloginStatus] = useState({})\n\n    function setField(evt) {\n        setFields({\n            ...fields,\n            [evt.target.name]: evt.target.value\n        })\n    }\n\n    function performLoginRequest() {\n        axios\n            .post(\"http://localhost:8080/auth/login\", {\n            email: fields.email,\n            password: fields.password\n        })\n        .then((response) =>{\n            if (response.data.success) {\n                const token = response.data.token;\n                localStorage.setItem(\"jsonwebtoken\", token);\n                setAuthenticationHeader(token);\n                props.onAuthenticated();\n                props.getUser(fields);\n                alert(response.data.message);\n                history.push(\"/dashboard\");\n            } else {\n                alert(response.data.message);\n                alert(\"response failed\");\n                setFields({\n                ...fields,\n                password: \"\",\n                });\n            }\n        })\n    }\n\n            /*fetch('http://localhost:8080/login',{\n              method: 'POST', \n              headers: {\n                'Content-Type': 'application/json'\n              }, \n              body: JSON.stringify(fields)\n            }).then(response => response.json())\n            .then(result => {\n              if(result.success) {\n                // logged in successfully \n                // dispatch an action and update the isAuthenticated to true */\n             /* }\n            })*/\n        //   }\n    // console.log(fields)\n\n\n    return (\n        <div className=\"login-container\">\n            <div className=\"logo\">Social Bubble\n            </div>\n            <div className=\"login-form\">\n                {/* <form className=\"login-form\"> */}\n                    <div className=\"username-container\">\n                        <label>Username</label>\n                        <input className=\"username-input\"\n                            name=\"email\"\n                            type=\"email\"\n                            // value={fields.email}\n                            onChange={setField}>\n                        </input>\n                    </div>\n                    \n                    <div className=\"password-container\">\n                        <label>Password</label>\n                        <input className=\"password-input\"\n                            name=\"password\"\n                            type=\"password\"\n                            // value={fields.password}\n                            onChange={setField}>\n                        </input>\n                    </div>\n                    <button\n                    onClick={performLoginRequest}\n                    // type=\"submit\"\n                    // className=\"loginButton\"\n                    >\n                    Login\n                    </button>\n                {/* </form> */}\n            </div>\n        \n            <div className=\"signup-link\">\n                <p>Not a user?<NavLink to=\"/register\">Register</NavLink></p>\n            </div>\n        </div>\n    )\n}\n\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        // onAuthenticated: () => dispatch(actionCreators.authenticated(true)),\n        // onAuthenticated: () => dispatch(true)  isAuthenticated: true  \n        getUser: GetLoggedInUser(dispatch),\n        onAuthenticated: () => dispatch({type: 'user.login'})  \n    }\n//         onUserLogin: SendLogin(dispatch)\n}\n\nexport default connect(null, mapDispatchToProps)(Login)\n\n// const mapDispatchToProps = (dispatch) => {\n//     return {\n//         onUserLogin: () => dispatch({ type: 'ON_LOGIN' })\n//     }\n// };\n\n// export default connect(null, mapDispatchToProps)(Login)\n\n// import React, { useState } from \"react\"\n// import { NavLink } from \"react-router-dom\"\n// import { connect } from \"react-redux\"\n// import \"./login.css\"\n// import { setAuthenticationHeader } from \"../../utils/Auth\";\n\n// import { UserLogin } from '../use-cases/user-login'\n// import axios from \"axios\";\n  \n// function Login(props) {\n    \n    // const [adminUser, setAdminUser] = useState({});\n    // const [guestUser] = useState({\n    //   username: \"David\",\n    //   password: \"1234\",\n    // });\n\n    // handleLogin = (e) => {\n    //     this.setState({\n    //       user: {\n    //         ...this.state.user,\n    //         [e.target.name]: e.target.value,\n    //       },\n    //     });\n    //   };\n//   const [fields, setFields] = useState({})\n//       function handleLogin(e) {\n      \n//         setFields({\n//           ...fields,\n//           [e.target.name]: e.target.value,\n//         });\n//       }\n    \n    //   function handleAdminLogin(e) {\n    //     setAdminUser({\n    //       ...adminUser,\n    //       [e.target.name]: e.target.value,\n    //     });\n    //   }\n\n\n    // axios.defaults.withCredentials = true;\n\n//     function handleLoginPost(){\n//          axios\n//          .post(\"http://localhost:8080/auth/login\", {\n//             email: fields.email,\n//             password: fields.password\n//         })\n//                 .then((response) =>{\n//                     if (response.data.success) {\n//                         const token = response.data.token;\n//                         localStorage.setItem(\"jsonwebtoken\", token);\n//                         setAuthenticationHeader(token);\n//                         props.onLogin();\n//                         alert(response.data.message);\n//                         props.history.push(\"/\");\n//                     } else {\n//                         alert(response.data.message);\n//                         alert(\"response failed\");\n//                         setFields({\n//                         ...fields,\n//                         password: \"\",\n//                         });\n//                     }\n//     })\n// }\n \n\n    // function handleAdminPost() {\n    //     axios\n    //       .post(\"https://react-redux-bookstore-server.herokuapp.com/login/admin\", {\n    //         // .post(\"http://localhost:3001/login/admin\", {\n    //         username: adminUser.adminUsername,\n    //         password: adminUser.adminPassword,\n    //       })\n    //       .then((response) => {\n    //         if (response.data.success) {\n    //           const token = response.data.token;\n    //           localStorage.setItem(\"jsonwebtoken\", token);\n    //           setAuthenticationHeader(token);\n    //           props.onAuthenticated();\n    //           props.onAdministrator();\n    //           alert(response.data.message);\n    //           props.history.push(\"/Admin\");\n    //         } else {\n    //           alert(response.data.message);\n    //           alert(\"response failed\");\n    //           setAdminUser({\n    //             ...adminUser,\n    //             password: \"\",\n    //           });\n    //         }\n    //       });\n    //   }\n\n    // function guestLoginPost() {\n    //     fetch(\"https://react-redux-bookstore-server.herokuapp.com/login/guest\", {\n    //       method: \"POST\",\n    //       headers: {\n    //         \"Content-Type\": \"application/json\",\n    //       },\n    //       body: JSON.stringify(guestUser),\n    //     })\n    //       .then((res) => res.json())\n    //       .then((response) => {\n    //         if (response.success) {\n    //           props.onAuthenticated();\n    //           alert(response.message);\n    //           props.history.push(\"/\");\n    //         } else {\n    //           alert(response.message);\n    //           setUser({\n    //             ...user,\n    //             password: \"\",\n    //           });\n    //         }\n    //       });\n    //   }\n\n    // function userAuthenticated() {\n    //     fetch\n    //     Axios.post(\"http://localhost:8080/isUserAuth\", {\n    //         headers: {\n    //             \"x-access-token\": localStorage.getItem(\"token\"),\n    //         },\n    //     })\n    //         console.log(response);\n    // };\n\n\n    \n\n//     return (\n//         <>\n\n//         <div className=\"login-container\">\n//             <div className=\"logo\">Social Bubble</div>\n//             <form className=\"login-form\" onSubmit={Login}>\n//                 <div className=\"username-container\">\n//                     <label>Email</label>\n//                     <input className=\"username-input\"\n//                         name=\"email\"\n//                         type=\"email\"\n//                         value={fields.email}\n//                         onChange={handleLogin}>\n//                     </input>\n//                 </div>\n//                 <div className=\"password-container\">\n//                     <label>Password</label>\n//                     <input className=\"password-input\"\n//                         name=\"password\"\n//                         type=\"password\"\n//                         value={fields.password}\n//                         onChange={handleLogin}>\n//                     </input>\n//                 </div>\n//                 <button\n//           onClick={handleLoginPost}\n//           type=\"button\"\n//           className=\"login-btn\"\n//         >\n//           Login\n//         </button>\n//             <button type=\"submit\" onClick={handleLoginPost} > \n//             User Login \n//             </button>\n            \n//             </form>\n\n\n\n\n\n//             <div className=\"signup-link\">\n//                 <p>Not a user? <NavLink to=\"/register/\">Register</NavLink></p>\n//             </div>\n//         </div>\n\n//     </>\n//   );\n// }\n\n\n\n// const mapDispatchToProps = (dispatch) => {\n//     return {\n//         onLogin: () => dispatch({ type: 'ON_LOGIN' })\n//     }\n// };\n\n// export default connect(null, mapDispatchToProps)(Login)","/Users/boris/Desktop/Projects/Bubble/social-bubble-client/src/Login/ui/landingPage.jsx",["124","125","126"],"import {React} from 'react'\nimport \"./landingPage.css\"\nimport bubble from './img/bubble.png'\nimport friends from './img/friends.png'\nimport statuspic from './img/status.png'\nimport { NavLink } from \"react-router-dom\"\n\nconst LandingPage = () => {\n    return (\n        <div id=\"wrapper\">\n            <div class=\"left-container\">\n                <div class=\"hbox\">\n                    <div>\n                        <img src={bubble} class=\"icon\" />\n                    </div>\n                    <div>\n                        <h1>Create A Bubble</h1>\n                    </div>\n                </div>\n                <div class=\"hbox\">\n                    <div>\n                        <img src={friends} class=\"icon\" />\n                    </div>\n                    <div>\n                        <h1>Add Friends And Family</h1>\n                    </div>\n                </div>\n                <div class=\"hbox\">\n                    <div>\n                        <img src={statuspic} class=\"icon\" />\n                    </div>\n                    <div>\n                        <h1>Update Your Status For Others To See</h1>\n                    </div>\n                </div>\n            </div>\n            <div class=\"right-container\">\n                <div class=\"text2\">\n                    <h1 class=\"text\">\n                        Connect with the world through your very own bubbles\n                    </h1>\n                    <h4 class=\"text\">Get started now</h4>\n                </div>\n                <div>\n                    <NavLink to=\"/login/\" className=\"login-button\"><h2>Login</h2></NavLink>\n                </div>\n                <div>\n                    <NavLink to=\"/register/\" className=\"login-button\"><h2>Register</h2></NavLink>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default LandingPage\n","/Users/boris/Desktop/Projects/Bubble/social-bubble-client/src/Bubbles/ui/AddMember.jsx",["127","128","129","130","131"],"import React, { useEffect, useState } from 'react'\nimport { Link } from \"react-router-dom\"\nimport {connect} from \"react-redux\"\nimport {GetBubbleUsers} from '../use-cases/getBubbleUsers'\nimport {AddBubbleMember} from \"../use-cases/addBubbleMember\"\nimport { Button, Card, Image, Input } from 'semantic-ui-react'\nimport Navbar from \"../../Navbar/Navbar\"\nimport \"./AddMember.css\"\n\nexport const AddMember = ({addMember}) => {\n\n   const bubbleId = 2\n\n   const [fields, setFields] = useState({})\n   const setField = (evt) =>\n   setFields({\n      ...fields,\n      [evt.target.name]: evt.target.value\n   })\n   let width = window.innerWidth\n   if (width > 768){\n   return (\n      <div>\n      <Navbar class=\"Nav\"></Navbar>\n      <div className=\"addMember-container\">\n          \n          <div class=\"div1\">\n             <h1 class=\"bubble-title\"> Add Member</h1>\n         </div>\n          <div class=\"div2\"> \n             <label class=\"bubble-text\">User's Email:</label>\n          </div>\n          <div class=\"div3\">\n            <Input type=\"text\" placeholder=\"Email Address\" value={fields.email} onChange={setField}/>\n          </div> \n          <div>\n            <Button onClick={() => addMember(fields, bubbleId)} primary color=\"blue\">\n            Add Member\n            </Button>\n         </div> \n      </div>\n      </div>\n   )} else {\n      return (\n         <div>\n         <div className=\"addMember-container\">\n             \n             <div class=\"div1\">\n                <h1 class=\"bubble-title\"> Add Member</h1>\n            </div>\n             <div class=\"div2\"> \n                <label class=\"bubble-text\">User's Email:</label>\n             </div>\n             <div class=\"div3\">\n               <Input type=\"text\" placeholder=\"Email Address\" value={fields.email} onChange={setField}/>\n             </div> \n             <div>\n               <Button onClick={() => addMember(fields, bubbleId)} primary color=\"blue\">\n               Add Member\n               </Button>\n            </div> \n         </div>\n         <Navbar class=\"Nav\"></Navbar>\n         </div>\n   \n      )}\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n   addMember: AddBubbleMember(dispatch)\n})\n\n\nexport default connect(null, mapDispatchToProps)(AddMember)","/Users/boris/Desktop/Projects/Bubble/social-bubble-client/src/Login/framework/actions.js",[],"/Users/boris/Desktop/Projects/Bubble/social-bubble-client/src/Bubbles/ui/Dashboard.jsx",["132","133","134","135","136","137","138"],"import React, { useEffect, useState } from \"react\"\nimport { Link } from \"react-router-dom\"\nimport { connect } from \"react-redux\"\nimport \"./dashboard.css\"\nimport { GetUserBubbles } from \"../use-cases/getUserBubbles\"\nimport { GetBubbleUsers } from \"../use-cases/getBubbleUsers\"\nimport { AddNewBubble } from \"../use-cases/addNewBubble\"\nimport {UpdateUserStatus} from \"../use-cases/updateUserStatus\"\n\nimport { Image, Dropdown, Input, Button, Card, Header, Icon } from 'semantic-ui-react'\nimport Navbar from \"../../Navbar/Navbar\"\n\n\nexport const Dashboard = ({ bubbles, getBubbles, addNewBubble, getBubbleUsers, updateUserStatus, user}) => {\n   let status = user.user.user_status\n\n\n   const [loading, setLoading] = useState(true)\n   const [adding, setAdding] = useState(false)\n   const [fields, setFields] = useState({})\n   const [userStatus, setUserStatus] = useState(status)\n   const [statusText, setStatusText] = useState('Healthy')\n   const userFullName = user.user.first_name + \" \" + user.user.last_name\n   console.log(user)\n   console.log(userStatus)\n   \n   var statusComponent;\n   if (status === 'green') {\n      let statusText = \"Healthy\"\n      statusComponent = <div>{statusText}</div>\n    } else if (status === 'yellow') {\n       let statusText = \"At Risk\"\n       statusComponent = <div>{statusText}</div>\n\n    } else if (status === 'red') {\n      let statusText = \"Sick\"\n      statusComponent = <div>{statusText}</div>\n    }\nconsole.log(bubbles)\n\n\n   const setField = (evt) =>\n      setFields({\n         ...fields,\n         [evt.target.name]: evt.target.value\n      })\n\n   console.log(bubbles.bubbleList)\n\n   useEffect(() => {\n      getBubbles(user.user.id)\n   }, [])\n\n\n   if (bubbles.bubbleList === []) {\n   }\n\n   else {\n      const list = bubbles.bubbleList\n      const userId = user.user.id\n      \n      const handleUpdateStatus = (evt) => {         \n         setUserStatus(evt.target.value)\n         console.log(userStatus)\n      }\n\n      return (\n         <div className=\"dashboard-container\">\n            <div className='nav-component-container'>\n               {/* <Nav /> */}\n               <Navbar />\n            </div>\n            <div className=\"dashboard-username\">{userFullName}</div>\n            <Image src=\"stock-profile.png\" className={\"profile-image image-\" + status}/>\n            <div className= {\"dashboard-status \" + status}>{statusComponent}</div>\n\n            <div className=\"user-status-container\">\n            {/* <Dropdown className=\"select-status\"\n               placeholder='Select Status'\n               fluid\n               selection\n               name = 'selected-status'\n               onChange = {handleUpdateStatus}\n            /> */}\n            <select onChange={handleUpdateStatus}>\n               <option value=\"green\">I am healthy</option>\n               <option value=\"yellow\">I am at risk</option>\n               <option value=\"red\">I am sick</option>\n            </select>\n            <Button primary onClick = {() => {updateUserStatus(userId, userStatus)}}\n               >Update Status</Button>\n            </div>\n            \n            {(adding === true) ?\n               <div className=\"add-to-bubble\">\n                  <Input className=\"status-input create-bubble-input\" placeholder=\"Enter new bubble name...\"\n                     name=\"title\"\n                     type=\"text\"\n                     value={fields.title}\n                     onChange={setField}>\n                  </Input>\n                  <button primary className=\"add-new-bubble-button\" onClick={() => addNewBubble(fields, userId)}>Add</button>\n               </div>\n               :\n               <Button primary onClick={() => setAdding(true)}>Create a new bubble</Button>\n            }\n\n            <div className=\"bubble-lists \"> <h1 className=\"bubble-lists-title\">Your Bubbles</h1> </div>\n            <div>\n               {list.map((item) => (\n                  <Link to = {`/bubbles/${item.id}`} > \n                     <Card\n                        key={item.id}\n                        header={item.title}\n                        meta='Test'\n                        description='A group for friends'\n                     >\n                        <div className=\"card-headers\">\n                           <Header as='h3'>{item.title}</Header>\n                           <Icon name='trash' ></Icon>\n                        </div>\n                     </Card>\n                  </Link>\n         \n               ))}\n            </div>\n         </div>\n      )\n   }\n\n\n}\n\nconst mapStateToProps = (state, { bubbles }) => ({\n   bubbles: state.bubble,\n   user: state.user\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n   getBubbles: GetUserBubbles(dispatch),\n   addNewBubble: AddNewBubble(dispatch),\n   updateUserStatus: UpdateUserStatus(dispatch)\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard)","/Users/boris/Desktop/Projects/Bubble/social-bubble-client/src/Bubbles/ui/Bubbles.jsx",["139","140","141","142","143","144"],"import React, { useEffect, useState } from 'react'\nimport Moment from 'react-moment'\nimport { Link, useParams } from \"react-router-dom\"\nimport { connect } from \"react-redux\"\nimport { Comment, Icon, Button } from 'semantic-ui-react'\nimport './Bubbles.css'\n\nimport Nav from \"../../Login/ui/nav\"\nimport Navbar from \"../../Navbar/Navbar\"\n\nimport { GetBubblePosts } from \"../use-cases/getBubblePosts\"\nimport { GetBubbleUsers } from \"../use-cases/getBubbleUsers\"\nimport { DeleteBubble } from \"../use-cases/deleteBubble\"\nimport { user } from '../../Login/framework/reducer'\nimport { AddBubblePost } from '../use-cases/addBubblePost'\n\n\n\nexport const Bubbles = ({ getPosts, getBubbleUsers, deleteBubble, addBubblePost, posts, user, bubble }) => {\n    const [fields, setFields] = useState({})\n\n    const setField = (evt) => {\n        setFields({\n            ...fields,\n            [evt.target.name]: evt.target.value\n        })\n    }\n\n    const test = { name: 'John Smith', date: '9/10/2020', post: 'Some random test post about an activity' }\n    const bubbleId = parseInt(useParams().bubbleId)\n\n    console.log(bubbleId)\n    useEffect(() => {\n        getPosts(bubbleId)\n        getBubbleUsers(user.id)\n\n    }, [])\n    //need to grab posts info and display it and create action for adding and deleting posts\n    console.log(posts.posts)\n    if (posts.posts === []) {\n        console.log('fefefe')\n    }\n    else {\n        let width = window.innerWidth\n        if (width > 768) {\n            return (\n                <div>\n                    <Navbar />\n                    <div className=\"bubbles-container\">\n                        {bubble.map(item => {\n                            if (bubbleId === item.id) {\n                                return (\n                                    <h1 className=\"bubble-title\">{item.title}</h1>)\n                            }\n                        })}\n\n\n                        <div className=\"toggle\">\n                            <Link to = {`/bubbles/${bubbleId}}`}><Button className=\"links button-width\" primary >Feed</Button></Link>\n                            <Link to={`/members/${bubbleId}`}><Button className=\"links button-width\" primary color='blue'>Members</Button></Link>\n\n                        </div>\n                        <div className=\"bubble-status\">This bubble is at risk!</div>\n\n                        <input\n                            name=\"body\"\n                            type=\"text\"\n                            onChange={setField}>\n                        </input>\n                        <button onClick ={() => {addBubblePost(user.user.id, fields)}}>Add Post</button>\n\n                        {posts.posts.map((post) => (\n                            <div className=\"user-posts\">\n\n                                <Comment.Group>\n                                    <Comment>\n                                        <Comment.Avatar as='a' src='/images/avatar/small/stevie.jpg' />\n                                        <Comment.Content>\n                                            <Comment.Author>{post.Post.User.first_name + \" \" + post.Post.User.last_name}</Comment.Author>\n                                            <Comment.Metadata>\n                                                <div>\n                                                    <Moment fromNow>{post.Post.createdAt}</Moment>\n                                                </div>\n                                                <div>\n                                                    <Icon name='star' />5 Faves\n                        </div>\n                                            </Comment.Metadata>\n                                            <Comment.Text>\n                                                {post.Post.body}\n                                            </Comment.Text>\n                                        </Comment.Content>\n                                    </Comment>\n\n                                </Comment.Group>\n                            </div>\n                        ))}\n                        <div className='delete-button'>\n                            <Button negative onClick={() => { deleteBubble(bubbleId) }}>Delete Bubble?</Button>\n                        </div>\n\n                    </div>\n                </div>\n            )\n        } else {\n            return (\n                <div>\n                    <div className=\"bubbles-container\">\n                        {bubble.map(item => {\n                            if (bubbleId === item.id) {\n                                return (\n                                    <h1 className=\"bubble-title\">{item.title}</h1>)\n                            }\n                        })}\n\n\n                        <div className=\"toggle\">\n                            <Link to = {`/bubbles/${bubbleId}}`}><Button className=\"links button-width\" primary >Feed</Button></Link>\n                            <Link to={`/members/${bubbleId}`}><Button className=\"links button-width\" primary color='blue'>Members</Button></Link>\n\n                        </div>\n                        <div className=\"bubble-status\">This bubble is at risk!</div>\n                        {posts.posts.map((post) => (\n                            <div className=\"user-posts\">\n\n                                <Comment.Group>\n                                    <Comment>\n                                        <Comment.Avatar as='a' src='/images/avatar/small/stevie.jpg' />\n                                        <Comment.Content>\n                                            <Comment.Author>{post.Post.User.first_name + \" \" + post.Post.User.last_name}</Comment.Author>\n                                            <Comment.Metadata>\n                                                <div>\n                                                    <Moment fromNow>{post.Post.createdAt}</Moment>\n                                                </div>\n                                                <div>\n                                                    <Icon name='star' />5 Faves\n                        </div>\n                                            </Comment.Metadata>\n                                            <Comment.Text>\n                                                {post.Post.body}\n                                            </Comment.Text>\n                                        </Comment.Content>\n                                    </Comment>\n\n                                </Comment.Group>\n\n                            </div>\n\n                        ))}\n                        <div className='delete-button'>\n                            <Button negative onClick={() => { deleteBubble(bubbleId) }}>Delete Bubble?</Button>\n                        </div>\n\n                    </div>\n                    <Navbar />\n                </div>\n            )\n        }\n    }\n\n}\n\n\n\n\n\n\n\nconst mapStateToProps = (state, { posts }) => ({\n    posts: state.bubblePosts,\n    bubbleUsers: state.bubbleUsers,\n    user: state.user.user,\n    bubble: state.bubble.bubbleList,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    getPosts: GetBubblePosts(dispatch),\n    getBubbleUsers: GetBubbleUsers(dispatch),\n    deleteBubble: DeleteBubble(dispatch),\n    addbubblePost: AddBubblePost(dispatch),\n})\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Bubbles)","/Users/boris/Desktop/Projects/Bubble/social-bubble-client/src/BubbleBuilder/ui/BubbleBuilder.jsx",[],"/Users/boris/Desktop/Projects/Bubble/social-bubble-client/src/Bubbles/ui/Members.jsx",["145","146"],"import React, {  useEffect, useState } from 'react'\nimport { Link, useParams,} from \"react-router-dom\"\nimport {connect} from \"react-redux\"\nimport {GetBubbleUsers} from '../use-cases/getBubbleUsers'\nimport { Button, Card, Image } from 'semantic-ui-react'\nimport Navbar from '../../Navbar/Navbar'\nimport \"./Members.css\"\n\n\n\n\nexport const Members = ({getBubbleUsers, bubbleUsers}) => {\n  const bubbleId = parseInt(useParams().bubbleId)\n  console.log(bubbleUsers.byId)\n\n    useEffect(()=> {\n        getBubbleUsers(bubbleId)\n    },[])\n\n    if (bubbleUsers.byId === []) {\n        \n    }\n    else{\n      let width = window.innerWidth\n      if (width > 768){\n        return (\n          <div>\n            <Navbar />\n            <div className=\"bubbles-container\">\n                \n                <h1 className=\"bubble-title\">Family</h1>\n                <div className=\"toggle\">\n                <Link to = {`/bubbles/${bubbleId}}`}><Button className=\"links button-width\" primary >Feed</Button></Link>\n                <Link to ={`/members/${bubbleId}}`}><Button className=\"links button-width\" primary >Members</Button></Link>\n    \n                </div>\n                <div className=\"bubble-status\">This bubble is at risk!</div>      \n                {bubbleUsers.byId.map((item) => (\n                    \n                    <div> <Card>\n      <Card.Content>\n        <Image\n          floated='right'\n          size='mini'\n          src='stock-profile.png'\n        />\n        <Card.Header>{item.first_name}</Card.Header>\n        <Card.Meta>Member</Card.Meta>\n      </Card.Content>\n      <Card.Content extra>\n        <div className='ui two buttons'>\n          <Button basic color='green'>\n            Approve\n          </Button>\n          <Button basic color='red'>\n            Decline\n          </Button>\n        </div>\n      </Card.Content>\n    </Card></div>\n                ))}\n        <Link to ={`/members/${bubbleId}}/add-member`}><Button className=\"links\" positive>Add Member</Button></Link>\n            </div>\n            </div>\n        )\n    }else{\n      return(\n        <div>\n        <div className=\"bubbles-container\">\n            \n            <h1 className=\"bubble-title\">Family</h1>\n            <div className=\"toggle\">\n            <Link to = {`/bubbles/${bubbleId}}`}><Button className=\"links button-width\" primary >Feed</Button> </Link>\n                <Link to ={`/members/${bubbleId}}`}><Button className=\"links button-width\" primary >Members</Button></Link>\n\n            </div>\n            <div className=\"bubble-status\">This bubble is at risk!</div>      \n            {bubbleUsers.byId.map((item) => (\n                \n                <div> <Card>\n  <Card.Content>\n    <Image\n      floated='right'\n      size='mini'\n      src='stock-profile.png'\n    />\n    <Card.Header>{item.first_name}</Card.Header>\n    <Card.Meta>Member</Card.Meta>\n  </Card.Content>\n  <Card.Content extra>\n    <div className='ui two buttons'>\n      <Button basic color='green'>\n        Approve\n      </Button>\n      <Button basic color='red'>\n        Decline\n      </Button>\n    </div>\n  </Card.Content>\n</Card></div>\n            ))}\n    <Link to ={`/members/${bubbleId}}/add-member`}><Button className=\"links\" positive>Add Member</Button></Link>\n        </div>\n        <Navbar />\n        </div>\n      )\n    }\n    \n  }\n  }\n    \n\n\nconst mapStateToProps = (state, {users}) => ({\n    bubbleUsers: state.bubbleUsers\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    getBubbleUsers: GetBubbleUsers(dispatch),\n    //addBubbleUsers: AddBubbleUsers(dispatch)\n})\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Members)\n\n","/Users/boris/Desktop/Projects/Bubble/social-bubble-client/src/Bubbles/framework/actions.js",[],"/Users/boris/Desktop/Projects/Bubble/social-bubble-client/src/Bubbles/use-cases/getBubbleUsers.js",["147"],"import { onGetBubbleUsers } from '../framework/actions'\n\nexport const GetBubbleUsers = (dispatch) => async (\n    bubble\n) => {\n\n    //const bubbleId = bubble.id\n    const bubbleId = { id: bubble }\n\n\n    const response = await fetch(`http://localhost:8080/bubble/${bubble}/users`, {\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n    })\n\n    let bubbleUsers = await response.json()\n\n    return dispatch(onGetBubbleUsers(bubbleUsers))\n}\n\nexport default GetBubbleUsers\n","/Users/boris/Desktop/Projects/Bubble/social-bubble-client/src/utils/Auth.js",[],"/Users/boris/Desktop/Projects/Bubble/social-bubble-client/src/Bubbles/use-cases/getUserBubbles.js",["148"],"import {onGetBubbles} from '../framework/actions'\n\nexport const GetUserBubbles = (dispatch) => async(\n    user\n) => {\n    \n    const userId = {id: user.id}\n\n    const response = await fetch(`http://localhost:8080/user/10/bubbles`,{\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        }, \n      })\n    console.log('testing bubbles work?')\n    let bubble = await response.json()\n    return dispatch(onGetBubbles(bubble))\n    }\n\nexport default GetUserBubbles\n","/Users/boris/Desktop/Projects/Bubble/social-bubble-client/src/Login/use-cases/getLoggedInUser.js",[],"/Users/boris/Desktop/Projects/Bubble/social-bubble-client/src/Bubbles/use-cases/getBubblePosts.js",[],"/Users/boris/Desktop/Projects/Bubble/social-bubble-client/src/Bubbles/use-cases/addBubbleMember.js",[],"/Users/boris/Desktop/Projects/Bubble/social-bubble-client/src/Bubbles/use-cases/addNewBubble.js",[],"/Users/boris/Desktop/Projects/Bubble/social-bubble-client/src/Bubbles/use-cases/deleteBubble.js",["149"],"import {onDeleteBubble} from '../framework/actions'\n\nexport const DeleteBubble = (dispatch) => async(\n    bubbleId\n) => {\n    \n\n    const response = await fetch(`http://localhost:8080/bubble/${bubbleId}/delete-bubble`,{\n        method: 'DELETE', \n        headers: {\n          'Content-Type': 'application/json'\n        }, \n    })\n    \n    let bubbleResponse = await response.json()\n    return dispatch(onDeleteBubble(bubbleId))\n\n  }\nexport default DeleteBubble","/Users/boris/Desktop/Projects/Bubble/social-bubble-client/src/Bubbles/use-cases/updateUserStatus.js",[],"/Users/boris/Desktop/Projects/Bubble/social-bubble-client/src/Bubbles/use-cases/addBubblePost.js",[],"/Users/boris/Desktop/Projects/Bubble/social-bubble-client/src/Login/ui/nav.jsx",["150","151","152","153","154"],"import React, { Component, useState } from 'react'\nimport { Menu, Button, Grid} from 'semantic-ui-react'\nimport { Link } from 'react-router-dom'\nimport \"./nav.css\"\n\nconst Nav = () => {\n    const [state, setState] = useState(\"\")\n    const [activeItem, setActiveItem] = useState(\"\")\n\n\n    const handleItemClick = (name) => {\n        setActiveItem(name)\n    }\n\n\n    return (\n        <Menu className=\"nav-container\">\n            <Link to='/dashboard'>\n                <Menu.Item\n                    name='Home'\n                    active={activeItem === 'Home'}\n                    onClick={() => handleItemClick('Home')}\n                >\n                    Home\n        </Menu.Item>\n            </Link>\n\n            <Link to='/bubbles'>\n                <Menu.Item\n                    name='Contacts'\n                    active={activeItem === 'Contacts'}\n                    onClick={() => handleItemClick('Contacts')}\n                >\n                    Contacts\n            </Menu.Item>\n            </Link>\n\n            <Link to='/'>\n                <Menu.Item\n                    name='Information'\n                    active={activeItem === 'Information'}\n                    onClick={() => handleItemClick('Information')}\n                >\n                    Information\n            </Menu.Item>\n            </Link>\n\n            <Menu.Menu position='right'>\n                <Link to='/login'>\n                    <Menu.Item>\n                        Login\n                </Menu.Item>\n                </Link>\n\n                <Link to=\"/register\">\n                    <Menu.Item>\n                        Sign Up\n                </Menu.Item>\n                </Link>\n            </Menu.Menu>\n        </Menu>\n\n    )\n}\n\n\nexport default Nav","/Users/boris/Desktop/Projects/Bubble/social-bubble-client/src/Navbar/Navbar.jsx",[],{"ruleId":"155","severity":1,"message":"156","line":10,"column":5,"nodeType":"157","messageId":"158","endLine":10,"endColumn":9},{"ruleId":"159","replacedBy":"160"},{"ruleId":"161","replacedBy":"162"},{"ruleId":"163","severity":1,"message":"164","line":72,"column":1,"nodeType":"165","endLine":72,"endColumn":52},{"ruleId":"155","severity":1,"message":"166","line":8,"column":8,"nodeType":"157","messageId":"158","endLine":8,"endColumn":22},{"ruleId":"167","severity":1,"message":"168","line":14,"column":25,"nodeType":"169","endLine":14,"endColumn":58},{"ruleId":"167","severity":1,"message":"168","line":22,"column":25,"nodeType":"169","endLine":22,"endColumn":59},{"ruleId":"167","severity":1,"message":"168","line":30,"column":25,"nodeType":"169","endLine":30,"endColumn":61},{"ruleId":"155","severity":1,"message":"170","line":1,"column":17,"nodeType":"157","messageId":"158","endLine":1,"endColumn":26},{"ruleId":"155","severity":1,"message":"171","line":2,"column":10,"nodeType":"157","messageId":"158","endLine":2,"endColumn":14},{"ruleId":"155","severity":1,"message":"172","line":4,"column":9,"nodeType":"157","messageId":"158","endLine":4,"endColumn":23},{"ruleId":"155","severity":1,"message":"173","line":6,"column":18,"nodeType":"157","messageId":"158","endLine":6,"endColumn":22},{"ruleId":"155","severity":1,"message":"174","line":6,"column":24,"nodeType":"157","messageId":"158","endLine":6,"endColumn":29},{"ruleId":"155","severity":1,"message":"172","line":6,"column":10,"nodeType":"157","messageId":"158","endLine":6,"endColumn":24},{"ruleId":"155","severity":1,"message":"175","line":10,"column":17,"nodeType":"157","messageId":"158","endLine":10,"endColumn":25},{"ruleId":"155","severity":1,"message":"176","line":18,"column":11,"nodeType":"157","messageId":"158","endLine":18,"endColumn":18},{"ruleId":"155","severity":1,"message":"177","line":18,"column":20,"nodeType":"157","messageId":"158","endLine":18,"endColumn":30},{"ruleId":"155","severity":1,"message":"178","line":22,"column":11,"nodeType":"157","messageId":"158","endLine":22,"endColumn":21},{"ruleId":"155","severity":1,"message":"179","line":22,"column":23,"nodeType":"157","messageId":"158","endLine":22,"endColumn":36},{"ruleId":"180","severity":1,"message":"181","line":52,"column":7,"nodeType":"182","endLine":52,"endColumn":9,"suggestions":"183"},{"ruleId":"155","severity":1,"message":"184","line":8,"column":8,"nodeType":"157","messageId":"158","endLine":8,"endColumn":11},{"ruleId":"155","severity":1,"message":"156","line":14,"column":10,"nodeType":"157","messageId":"158","endLine":14,"endColumn":14},{"ruleId":"155","severity":1,"message":"185","line":29,"column":11,"nodeType":"157","messageId":"158","endLine":29,"endColumn":15},{"ruleId":"180","severity":1,"message":"186","line":37,"column":8,"nodeType":"182","endLine":37,"endColumn":10,"suggestions":"187"},{"ruleId":"188","severity":1,"message":"189","line":50,"column":42,"nodeType":"190","messageId":"191","endLine":50,"endColumn":44},{"ruleId":"188","severity":1,"message":"189","line":108,"column":42,"nodeType":"190","messageId":"191","endLine":108,"endColumn":44},{"ruleId":"155","severity":1,"message":"192","line":1,"column":29,"nodeType":"157","messageId":"158","endLine":1,"endColumn":37},{"ruleId":"180","severity":1,"message":"193","line":18,"column":7,"nodeType":"182","endLine":18,"endColumn":9,"suggestions":"194"},{"ruleId":"155","severity":1,"message":"195","line":8,"column":11,"nodeType":"157","messageId":"158","endLine":8,"endColumn":19},{"ruleId":"155","severity":1,"message":"196","line":7,"column":11,"nodeType":"157","messageId":"158","endLine":7,"endColumn":17},{"ruleId":"155","severity":1,"message":"197","line":15,"column":9,"nodeType":"157","messageId":"158","endLine":15,"endColumn":23},{"ruleId":"155","severity":1,"message":"198","line":1,"column":17,"nodeType":"157","messageId":"158","endLine":1,"endColumn":26},{"ruleId":"155","severity":1,"message":"199","line":2,"column":16,"nodeType":"157","messageId":"158","endLine":2,"endColumn":22},{"ruleId":"155","severity":1,"message":"200","line":2,"column":24,"nodeType":"157","messageId":"158","endLine":2,"endColumn":28},{"ruleId":"155","severity":1,"message":"201","line":7,"column":12,"nodeType":"157","messageId":"158","endLine":7,"endColumn":17},{"ruleId":"155","severity":1,"message":"202","line":7,"column":19,"nodeType":"157","messageId":"158","endLine":7,"endColumn":27},"no-unused-vars","'user' is defined but never used.","Identifier","unusedVar","no-native-reassign",["203"],"no-negated-in-lhs",["204"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'GetUserBubbles' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useEffect' is defined but never used.","'Link' is defined but never used.","'GetBubbleUsers' is defined but never used.","'Card' is defined but never used.","'Image' is defined but never used.","'Dropdown' is defined but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'statusText' is assigned a value but never used.","'setStatusText' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getBubbles' and 'user.user.id'. Either include them or remove the dependency array. If 'getBubbles' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["205"],"'Nav' is defined but never used.","'test' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'bubbleId', 'getBubbleUsers', 'getPosts', and 'user.id'. Either include them or remove the dependency array. If 'getPosts' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["206"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'useState' is defined but never used.","React Hook useEffect has missing dependencies: 'bubbleId' and 'getBubbleUsers'. Either include them or remove the dependency array. If 'getBubbleUsers' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["207"],"'bubbleId' is assigned a value but never used.","'userId' is assigned a value but never used.","'bubbleResponse' is assigned a value but never used.","'Component' is defined but never used.","'Button' is defined but never used.","'Grid' is defined but never used.","'state' is assigned a value but never used.","'setState' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"208","fix":"209"},{"desc":"210","fix":"211"},{"desc":"212","fix":"213"},"Update the dependencies array to be: [getBubbles, user.user.id]",{"range":"214","text":"215"},"Update the dependencies array to be: [bubbleId, getBubbleUsers, getPosts, user.id]",{"range":"216","text":"217"},"Update the dependencies array to be: [bubbleId, getBubbleUsers]",{"range":"218","text":"219"},[1669,1671],"[getBubbles, user.user.id]",[1201,1203],"[bubbleId, getBubbleUsers, getPosts, user.id]",[525,527],"[bubbleId, getBubbleUsers]"]